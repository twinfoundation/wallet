{
	"name": "@twin.org/wallet-connector-iota",
	"version": "0.0.1-next.16",
	"description": "Wallet connector implementation using IOTA",
	"repository": {
		"type": "git",
		"url": "git+https://github.com/twinfoundation/wallet.git",
		"directory": "packages/wallet-connector-iota"
	},
	"author": "cornel.filip@iota.org",
	"license": "Apache-2.0",
	"type": "module",
	"engines": {
		"node": ">=20.0.0"
	},
	"scripts": {
		"clean": "rimraf dist coverage docs/reference",
		"build": "tsc",
		"build:watch": "tsc-watch --onSuccess \"npm run bundle:esm\"",
		"test": "vitest --run --config ./vitest.config.ts --no-cache",
		"coverage": "vitest --run --coverage --config ./vitest.config.ts --no-cache",
		"bundle:esm": "rollup --config rollup.config.mjs --environment MODULE:esm",
		"bundle:cjs": "rollup --config rollup.config.mjs --environment MODULE:cjs",
		"bundle": "npm run bundle:esm && npm run bundle:cjs",
		"docs:clean": "rimraf docs/reference",
		"docs:generate": "typedoc",
		"docs": "npm run docs:clean && npm run docs:generate",
		"dist": "npm run clean && npm run build && npm run test && npm run bundle && npm run docs",
		"prepare": "ts-patch install -s"
	},
	"dependencies": {
		"@iota/iota-sdk": "^0.5.0",
		"@twin.org/core": "next",
		"@twin.org/crypto": "next",
		"@twin.org/nameof": "next",
		"@twin.org/vault-models": "next",
		"@twin.org/wallet-models": "0.0.1-next.16",
		"@twin.org/dlt-iota": "next"
	},
	"devDependencies": {
		"@twin.org/entity": "next",
		"@twin.org/entity-storage-connector-memory": "next",
		"@twin.org/nameof-transformer": "next",
		"@twin.org/nameof-vitest-plugin": "next",
		"@twin.org/vault-connector-entity-storage": "next",
		"@vitest/coverage-v8": "3.0.5",
		"copyfiles": "2.4.1",
		"dotenv": "16.4.7",
		"rimraf": "6.0.1",
		"rollup": "4.34.6",
		"rollup-plugin-copy": "3.5.0",
		"rollup-plugin-typescript2": "0.36.0",
		"ts-patch": "3.3.0",
		"tsc-watch": "6.2.1",
		"typedoc": "0.27.7",
		"typedoc-plugin-markdown": "4.4.2",
		"typescript": "5.7.3",
		"vitest": "3.0.5"
	},
	"main": "./dist/cjs/index.cjs",
	"module": "./dist/esm/index.mjs",
	"types": "./dist/types/index.d.ts",
	"exports": {
		".": {
			"types": "./dist/types/index.d.ts",
			"require": "./dist/cjs/index.cjs",
			"import": "./dist/esm/index.mjs"
		},
		"./locales": "./locales"
	},
	"files": [
		"dist/cjs",
		"dist/esm",
		"dist/types",
		"locales",
		"docs"
	]
}
